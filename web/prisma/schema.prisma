generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  orderId        String     @id
  senderId       Int
  sendAddress    String?
  sendLatLng     String?
  receiverId     Int
  receiveAddress String?
  receiveLatLng  String?
  driverId       Int?
  status         status?
  comments       String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @default(now())
  deletedAt      DateTime?
  driver         User?      @relation("Order_driverIdToUser", fields: [driverId], references: [userId])
  receiver       User       @relation("Order_receiverIdToUser", fields: [receiverId], references: [userId])
  sender         User       @relation("Order_senderIdToUser", fields: [senderId], references: [userId])
  logs           OrderLog[]
}

model OrderLog {
  orderLogId Int       @id @default(autoincrement())
  orderId    String
  status     String?
  comments   String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now())
  deletedAt  DateTime?
  order      Order     @relation(fields: [orderId], references: [orderId])
}

model User {
  userId        Int       @id @default(autoincrement())
  firstName     String?
  lastName      String?
  email         String    @unique
  phone         String?
  username      String    @unique
  password      String
  role          role
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  deletedAt     DateTime?
  driverOrders  Order[]   @relation("Order_driverIdToUser")
  receiveOrders Order[]   @relation("Order_receiverIdToUser")
  sendOrders    Order[]   @relation("Order_senderIdToUser")
}

enum role {
  customer
  admin
  driver
}

enum status {
  Pending
  Approved
  Rejected
  Cancelled
  Assigned
  Collecting
  Collected
  Delivering
  Delivered
}
